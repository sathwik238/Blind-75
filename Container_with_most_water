Container-with-most-water


class Solution:
    def maxArea(self, height: List[int]) -> int:
        n=len(height)
        l=0
        r=n-1
        area=0
        
        while l<r:
            curarea=(r-l)*min(height[l],height[r])
            area=max(area,curarea)
            if height[l]<height[r]:
                l+=1
            else:
                r-=1
        return area        
        








Trapping Rain_Water
class Solution:
    def trap(self, height: List[int]) -> int:
        n=len(height)
        lmax=[-1]*n
        rmax=[-1]*n
        m=0
        
        for i in range(n):
            lmax[i]=max(m,height[i])
            m=max(m,height[i])
        #print(lmax)    
        m=0
        for i in range(n-1,-1,-1):
            rmax[i]=max(m,height[i])
            m=max(m,height[i])
        #print(rmax)    
        ans=[]
        for i in range(n):
            ans.append(min(lmax[i],rmax[i])-height[i])
       # print(ans)    
        
        return(sum(ans))
